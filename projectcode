import java.sql.*;

public class DBConn {

	//Singleton pattern
	private static Connection dbConn;
	public static Connection getConnection()
		throws SQLException, ClassNotFoundException {
		if (dbConn == null) {
			String url = "jdbc:oracle:thin:@localhost:1521:xe";
			String user = "scott";
			String pw = "tiger";

			Class.forName("oracle.jdbc.driver.OracleDriver");
			dbConn = DriverManager.getConnection(url, user, pw);
		}

		return dbConn;
    
	}


	public static void close()
		throws SQLException {
		if (dbConn != null) {
			if (!dbConn.isClosed()) {
				dbConn.close();
			}
		}
		dbConn = null;
	}
}



public class MemberDTO {
	private int mid;
	private String name, tel;
	public int getMid() {
		return mid;
	}

	public void setMid(int mid) {
		this.mid = mid;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getTel() {
		return tel;
	}

	public void setTel(String tel) {
		this.tel = tel;
	}

}



import java.io.IOException;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.sql.*;
import java.util.ArrayList;

public class MemberServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		doGetPost(req, resp);
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		doGetPost(req, resp);
	}

	protected void doGetPost(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
      
		//서블릿 주소 분석
		String uri = req.getRequestURI();
		if (uri.indexOf("Member.me") != -1) {
			member(req, resp);
		}

		if (uri.indexOf("MemberInsert.me") != -1) {
			memberInsert(req, resp);
		}
	}


	private void member(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		//데이터베이스 연결
		//자료를 읽어온다.
		//자료 재전송
		String count = "";
		ArrayList<MemberDTO>
			arrayList = new ArrayList<MemberDTO>();
		try {
			//데이터베이스 연결 구문
			Connection conn = DBConn.getConnection();
      
			//SELECT 실행 구문 -> 회원수 -> count 변수에 저장
			String sql1 = String.format("SELECT COUNT(*) AS count FROM member");
			Statement stmt = conn.createStatement();
			ResultSet rs1 = stmt.executeQuery(sql1); //결과집합
			while(rs1.next()) { //row 단위 접근
				int result = rs1.getInt("count"); //column 단위 접근
				count = String.format("%d", result);
			}

			rs1.close();
      
			//SELECT 실행 구문 -> 회원 명단 -> 테이블 태그 이용-> str 변수에 누적
			String sql2 = String.format("SELECT mid, name, tel FROM	member ORDER BY mid");
			ResultSet rs2 = stmt.executeQuery(sql2); //결과집합
			while(rs2.next()) { //row 단위 접근
				int mid = rs2.getInt("mid"); //column 단위 접근
				String name = rs2.getString("name");
				String tel = rs2.getString("tel");
				MemberDTO dto = new MemberDTO();
				dto.setMid(mid);
				dto.setName(name);
				dto.setTel(tel);

				arrayList.add(dto);
			}

			rs2.close();
			req.setAttribute("count", count);
			req.setAttribute("arrayList", arrayList);

		} catch(Exception e) {
			System.out.println(e.toString());
		}

		//MemberServlet.jsp 페이지로 연결
		//forward() 메소드 이용
		RequestDispatcher dispatcher 
			= req.getRequestDispatcher("MemberServlet.jsp");
		dispatcher.forward(req, resp);
	}

	private void memberInsert(HttpServletRequest req, HttpServletResponse resp)
			throws ServletException, IOException {
		//데이터 수신
		//데이터베이스 연결
		//자료를 입력한다.
		req.setCharacterEncoding("euc-kr");
		String name = req.getParameter("name");
		String tel = req.getParameter("tel");
		try {
			Connection conn = DBConn.getConnection();
			String sql = String.format("INSERT INTO member (mid,name,tel) VALUES (memberSeq.nextval, '%s', '%s')", name, tel);
			Statement stmt = conn.createStatement();
			stmt.executeUpdate(sql);
		} catch(Exception e) {
			System.out.println(e.toString());
		}

		//Member.me 서블릿을 재요청 한다.
		//sendRedirect() 메소드 이용
		String url = String.format("Member.me");
		resp.sendRedirect(url);
	}
}


//MemberServlet.jsp -> 입력, 출력 화면 구성용 페이지. 결과 메시지 출력.
<%@ page language="java" contentType="text/html; charset=EUC-KR"
    pageEncoding="EUC-KR"%>
<%@ page import="java.util.*" %>    
<%@ page import="com.test.*" %>    
<%
	String count = (String)request.getAttribute("count");
	StringBuilder str = new StringBuilder();
	@SuppressWarnings("unchecked")
	ArrayList<MemberDTO>
		arrayList = (ArrayList<MemberDTO>)request.getAttribute("arrayList");
	for (MemberDTO dto : arrayList) {
		str.append("<tr>");
		str.append(String.format("<td>%d</td>", dto.getMid()));
		str.append(String.format("<td>%s</td>", dto.getName()));
		str.append(String.format("<td>%s</td>", dto.getTel()));
		str.append("</tr>");
	}
%>    



<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=EUC-KR">
<title>Insert title here</title>
<script type="text/javascript">
	function myFunc(obj) {
		//데이터 검사
		var name = document.getElementById("name");
		var tel = document.getElementById("tel");
		var msg = document.getElementById("msg");
		msg.style.display = "none";

		//빈 칸 검사
		if (name.value == ""
				|| tel.value == "") {
			msg.style.display = "inline";
			return;
		}

		//데이터 전송
		obj.form.submit();
	}

</script>
</head>
<body>
<div>

	<h2>이름과 전화번호를 저장하는 프로그램(JSP, Servlet, JDBC)</h2>
	<form action="MemberInsert.me" method="post">
		이름 <input type="text" name="name" id="name"><br>
		전화 <input type="text" name="tel" id="tel"><br>
		<input type="button" value=" 등록 "
			onclick="myFunc(this)"><br>
		<span id="msg" style="color:red; display:none;">이름, 전화를 입력해야 합니다.</span>			
	</form>

	<h3>출력-------------</h3>
	<div>
		<h4>전체 회원수 : <%=count%> 명</h4>
		<table style="width:400px;" border="1">
			<tbody>
				<tr><th>번호</th><th>이름</th><th>전화</th></tr>
				<%=str%>
			</tbody>
		</table>
	</div>
</div>
</body>
</html>


//web.xml -> 확장자(*.me)에 의한 서블릿 주소 등록.
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>Servlet_20121205</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>

	<servlet>
		<servlet-name>member11</servlet-name>
		<servlet-class>com.test.MemberServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>member11</servlet-name>
		<url-pattern>*.me</url-pattern>
	</servlet-mapping>



</web-app>
